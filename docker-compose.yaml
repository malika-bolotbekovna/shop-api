services:
  web:
    build:
      context: .
    command: sh /app/entrypoint.sh
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    env_file:
      .env
    volumes:
      - .:/app
      - back_static:/app/static
      - back_media:/app/media

  db:
    image: "postgres:14"
    environment:
      POSTGRES_DB: ${NAME_DB}
      POSTGRES_USER: ${USER_DB}
      POSTGRES_PASSWORD: ${PASSWORD_DB}
    volumes:
      - 'db_data:/var/lib/postgresql/data'
  redis:
    image: redis:7
    volumes:
      - redis_data:/data
  celery_worker:
    build: 
      context: .
    command: celery -A shop_api worker --loglevel=info --concurrency=4
    depends_on:
      - redis
    env_file:
      .env
    volumes:
      - .:/app
  celery_beat:
    build:
      context: .
    command: celery -A shop_api beat --loglevel=info
    depends_on:
      - redis
    env_file:
      .env
    volumes:
      - .:/app
  celery_flower:
    build:
      context: .
    command: celery -A shop_api flower --port=5555
    ports:
      - "5556:5555"
    depends_on:
      - redis
    env_file:
      .env
    volumes:
      - .:/app

  ngnix:
    image: nginx:1.25
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - back_static:/app/static
      - back_media:/app/media
    depends_on:
      - web
volumes:
  db_data:
  redis_data:
  back_static:
  back_media:
  #  docker-compose exec shop_backend bash